#!/bin/sh

#. /lib/functions.sh
. /lib/mwan3/mwan3.sh
#. /lib/functions/network.sh

[ "$ACTION" = "ifup" -o "$ACTION" = "ifdown" ] || exit 1
[ -n "$INTERFACE" ] || exit 2

if [ "$ACTION" = "ifup" ]; then
	[ -n "$DEVICE" ] || exit 3
fi

#config_load mwan3
data=`jq -r . /tmp/mwan3.json`
LOG=echo
#config_get_bool enabled globals 'enabled' '0'
enabled=`echo $data | jq .globals.enabled`
[ ${enabled} = "null" ] && enabled=0
[ ${enabled} -gt 0 ] || exit 0

#config_get local_source globals local_source 'none'
local_source=`echo $data | jq -r .globals.local_source`
[ ${local_source} = "null" ] && local_source="none"
[ "${local_source}" = "none" ] && {
	exit 0
}

[ "${local_source}" = "$INTERFACE" ] || {
	exit 0
}

mwan3_lock
#src_ip=$(uci_get_state mwan3 globals src_ip)
src_ip=`echo $data | jq -r .globals.src_ip`
#[ "${src_ip}" != "" ] && {
[ "${src_ip}" != "null" ] && {
	ip route del default via "${src_ip}" dev lo 1>/dev/null 2>&1
	ip addr del "${src_ip}/32" dev lo 1>/dev/null 2>&1
}

sleep 1

[ "$ACTION" = "ifup" ] && {
	#network_get_ipaddr src_ip "${local_source}"
	src_ip=`ip -o -4 addr list $DEVICE | awk '{print $4}' | cut -d/ -f1`
	if [ "${src_ip}" = "" ]; then
		$LOG warn "Unable to set source ip for own initiated traffic (${local_source})"
	else
		ip addr add "${src_ip}/32" dev lo
		ip route add default via "${src_ip}" dev lo
		#uci_toggle_state mwan3 globals src_ip "${src_ip}"
		echo $data | jq .globals.src_ip=\"${src_ip}\" > /tmp/mwan3.json
	fi
}
mwan3_unlock

exit 0
